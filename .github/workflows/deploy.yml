name: Deploy to GitHub Pages # Define the name of the workflow

on:
  push:
    branches: ['main'] # Trigger this workflow on a push event to the main branch

jobs:
  build_site:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner for this job
    steps:
      - name: Checkout # Task to checkout repository content
        uses: actions/checkout@v4 # Use checkout action version 4

      - name: Install pnpm # Task to set up the pnpm package manager
        uses: pnpm/action-setup@v3 # Use pnpm setup action version 3
        with:
          version: 8 # Install pnpm version 8

      - name: Install Node.js # Task to install Node.js, needed for the build process
        uses: actions/setup-node@v4 # Use Node.js setup action version 4
        with:
          node-version: 22 # Specify Node.js version 22
          cache: pnpm # Enable caching for pnpm dependencies

      - name: Install dependencies # Run dependency installation via pnpm
        run: pnpm install # Execute the installation command

      - name: build # Task to build the project
        env:
          # BASE_PATH: '/${{ github.event.repository.name }}' # Set BASE_PATH using repository name from the event
          BASE_PATH: '' # Set BASE_PATH using repository name from the event
        run: |
          npm run build  # Execute the build script defined in package.json

      - name: Upload Artifacts # Upload the compiled build files as an artifact for deployment
        uses: actions/upload-pages-artifact@v3 # Use the GitHub Pages artifact uploader action version 3
        with:
          path: 'build/' # Specify the build directory to be uploaded

  deploy:
    needs: build_site # Ensure that the deploy job runs after build_site completes successfully
    runs-on: ubuntu-latest # Use an Ubuntu runner for the deploy phase

    permissions:
      pages: write # Grant write access to GitHub Pages for the deployment steps
      id-token: write # Grant permission to generate an ID token required for deployments

    environment:
      name: github-pages # Define the deployment environment name as github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Reference the URL output from the deployment step

    steps:
      - name: Deploy # Task to deploy the artifact to GitHub Pages
        id: deployment # Assign an ID to this step to reference its outputs later
        uses: actions/deploy-pages@v4 # Use the GitHub Pages deployment action version 4
